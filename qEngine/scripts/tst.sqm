void testCNOT() {
    println("testing cnot\n");

    Qubit x(One, 1);
    Qubit y(Zero, 1);

    print(x);
    print(y);

    //hadamard(x);
    hadamard(y);

    yGate(y);

    //print(x);
    print(y);

    cnot(x, y);

    //print(x);
    print(y);

    y.showProbabilities();
    println("");

    //hadamard(x);
    hadamard(y);

    //print(x);
    print(y);

    y.showProbabilities();
}

void testSqrtSwap() {
    Qubit x(One, 1);
    Qubit y(Zero, 1);
    hadamard(x);
    hadamard(y);

    sqrtSwap(x, y);

    print(x);
    print(y);

    println("x is valid?: " + x.isValid());
    println("y is valid?: " + y.isValid());
    
    x.showProbabilities();
    println("measure: \n" + x.measure());
}

void run() {
    //testSqrtSwap();

    testCNOT();

    return;
    Qubit q(Zero, 2);
    //print(q);

    hadamard(q);
    zGate(q);
    print(q);

    println("valid? " + (q.isValid() ? "yes" : "no"));

    println("measure: \n" + q.measure());
    q.showProbabilities();

    println("---------------");

    Qubit b(Zero, 1);
    print(b);
    b.showProbabilities();

    //hadamard(b);
    //print(b);
    sqrtX(b);
    //hadamard(b);
    print(b);

    println("valid? " + (b.isValid() ? "yes" : "no"));
    b.showProbabilities();

    /*
    for (int i = 0; i < 40; ++i) {
        println("measure: " + b.measure());
    }*/
}